-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("21b3f00e-5083-45c8-92be-24d44a0e0927",
	'EmployeePayment',
	5,
	'EmployeePayment',
	'Aggregate payment information for an employee for a pay period.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("8cac4492-498a-4aef-872c-1b3813b2dd4e",
	"21b3f00e-5083-45c8-92be-24d44a0e0927",
	'EvaluatePaymentElements',
	'(Re)evaluate payments by traversing the set of structure elements and applying modifiers as appropriate.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// (Re)evaluate the current payroll elements for this employee payment instance.
// For each element, (re)calculate its value - if it has not been edited in a review.
// (No value should be re-evaluated after it has been edited by a reviewer)
// Navigate to the element specification to understand how to evaluate the element.
// Non-dependent values are calculated first; they may be needed as the basis for modifier elements.
// Then, modifier-type elements (multipliers) evaluate based on their specified ''target''.
// All evaluations may involve pro-rating if their effective dates fall within the pay period.
 
// First, find all elements of this payment that have not been edited.
select many payElements related by self->EmployeePaymentElement[R15.''is composed of''];
select many editedElements related by payElements->Payroll[R31.''has been edited for'']
                                                 ->EmployeePaymentElement[R31.''has edited''];
elements = payElements - editedElements;

// Pass 1 - evaluate non-dependent elements that have not been edited by a reviewer.
for each element in elements
  select one structElement related by element->PaymentStructureElement[R13.''is a realization of''];
  select one targetSpec related by structElement->PaymentElementSpec[R12.''is typed by'']
                                                ->PaymentElementSpec[R30.''is a modifier for''];
  if ( empty targetSpec )	// this is not a modifier - proceed to evaluate
    element.Amount = structElement.NominalValue * self.ProRateFactor( EffectiveDate:structElement.EffectiveDate );
 	end if;
end for;

// Pass 2 - evaluate any modifier elements: e.g. amount = base pay (''target'') by bonus percentage (''modifier'')
for each element in  elements
  select one structElement related by element->PaymentStructureElement[R13.''is a realization of''];
  select one targetSpec related by structElement->PaymentElementSpec[R12.''is typed by'']
                                                ->PaymentElementSpec[R30.''is a modifier for''];
  if ( not empty targetSpec )	  // this element is a modifier - proceed to identify its ''target''
    for each targetElement in elements
      select one targetStructElement related by targetElement->PaymentStructureElement[R13.''is a realization of''];
      select one targetElementSpec related by targetStructElement->PaymentElementSpec[R12.''is typed by'']
       where ( selected.Label == targetSpec.Label );
  	  if ( not_empty targetElementSpec )	// this is the target element''s spec.; evaluate, using the target element amount.
        element.Amount = self.Modify( TargetValue:targetElement.Amount,
                                      Value:structElement.NominalValue,
                                      EffectiveDate:structElement.EffectiveDate,
                                      TargetEffectiveDate:targetStructElement.EffectiveDate );
        break;
 	    end if;
 	  end for;
  end if;
end for;
',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0);
INSERT INTO O_TFR
	VALUES ("67668115-33d2-4f71-96f0-b8893def710d",
	"21b3f00e-5083-45c8-92be-24d44a0e0927",
	'CalculateTotalPayment',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Combine evaluated element values for total payment.
self.Amount = 0;
select many payElements related by self->EmployeePaymentElement[R15.''is composed of''];
for each payElement in payElements
  self.Amount = self.Amount + payElement.Amount;  
end for;
',
	1,
	'',
	"8cac4492-498a-4aef-872c-1b3813b2dd4e",
	0);
INSERT INTO O_TFR
	VALUES ("44ad1c48-8811-456d-b6fb-011ada00ca74",
	"21b3f00e-5083-45c8-92be-24d44a0e0927",
	'Modify',
	'This operation will modify a value in a non-edited payment contribution.
The modification may be pro-rated depending on creation dates of both elements.
',
	"ba5eda7a-def5-0000-0000-000000000003",
	1,
	'// Establish the value of a pay element using the nominal value taken from its structure template.
// The modifier''s nominal value is used as a multiplier of its ''target'' element value.
// If the pay element became effective within the current pay period it should be be pro-rated.

select one payperiod related by self->Payroll[R7.''is on'']->PayPeriod[R33.''is for''];
result = param.TargetValue * param.Value;
if ( param.EffectiveDate > payperiod.Start )
  result = result * self.ProRateModifier( EffectiveDate:param.EffectiveDate, 
                                          TargetEffectiveDate:param.TargetEffectiveDate );
end if;                                
return result;',
	1,
	'',
	"67668115-33d2-4f71-96f0-b8893def710d",
	0);
INSERT INTO O_TPARM
	VALUES ("3b406592-749d-40df-9b91-c0a73394ac28",
	"44ad1c48-8811-456d-b6fb-011ada00ca74",
	'TargetValue',
	"ba5eda7a-def5-0000-0000-000000000003",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'An input value to be operated on by the value of the modifier.');
INSERT INTO O_TPARM
	VALUES ("3753391c-ef13-4038-bf2a-ce67e8ab62a8",
	"44ad1c48-8811-456d-b6fb-011ada00ca74",
	'TargetEffectiveDate',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"fbcaebfa-1c4e-4819-976f-f8436251f5f6",
	'The date when this taget value came into effect.
units: seconds
origin: start of epoch');
INSERT INTO O_TPARM
	VALUES ("fbcaebfa-1c4e-4819-976f-f8436251f5f6",
	"44ad1c48-8811-456d-b6fb-011ada00ca74",
	'EffectiveDate',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"ae8d6ae3-0db5-41fc-ae97-d92cfc480cbf",
	'The date when this modifier came into effect.
units: seconds
origin: start of epoch');
INSERT INTO O_TPARM
	VALUES ("ae8d6ae3-0db5-41fc-ae97-d92cfc480cbf",
	"44ad1c48-8811-456d-b6fb-011ada00ca74",
	'Value',
	"ba5eda7a-def5-0000-0000-000000000003",
	0,
	'',
	"3b406592-749d-40df-9b91-c0a73394ac28",
	'The value (factor) of this modifier.');
INSERT INTO O_TFR
	VALUES ("a0cdf5c4-7bcc-4c98-8db6-33abe7e6a2d7",
	"21b3f00e-5083-45c8-92be-24d44a0e0927",
	'ProRateFactor',
	'If this element is not in effect for the entire pay period it must be prorated.',
	"ba5eda7a-def5-0000-0000-000000000003",
	1,
	'// Check whether a pay element has become effective within a pay period.
// If so, evaluate a fractional pro-rating factor; else return 1.0.
// Note: dates are actually represented in seconds!

select one payperiod related by self->Payroll[R7.''is on'']->PayPeriod[R33.''is for''];
if ( param.EffectiveDate > payperiod.Start )
  duration = payperiod.End - payperiod.Start;
  ineffect = payperiod.End - param.EffectiveDate;
  result = 1.0 * ineffect / duration;
  return result;
else 
  return 1.0;
end if;',
	1,
	'',
	"44ad1c48-8811-456d-b6fb-011ada00ca74",
	0);
INSERT INTO O_TPARM
	VALUES ("dd0bef8c-1c65-458b-ab61-8be3f478ff35",
	"a0cdf5c4-7bcc-4c98-8db6-33abe7e6a2d7",
	'EffectiveDate',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'The date when the value being evaluated came into effect.
units: seconds
origin: start of epoch');
INSERT INTO O_TFR
	VALUES ("72c37953-d150-4019-9f21-6c3637971a44",
	"21b3f00e-5083-45c8-92be-24d44a0e0927",
	'ProRateModifier',
	'If this element is not in play for the entire pay period it mist be prorated.',
	"ba5eda7a-def5-0000-0000-000000000003",
	1,
	'// Check whether a modifier needs to be pro-rated.
// If, so evaluate a fractional pro-rating factor; else, return 1.
// Note that the effective date must be checked against the ''target'' effective date.
// Note: dates are actually represented in seconds!

select one payperiod related by self->Payroll[R7.''is on'']->PayPeriod[R33.''is for''];
if ( param.EffectiveDate > payperiod.Start )		    // modifier becomes effective within period..
  duration = payperiod.End - payperiod.Start;       // tentatively..
  if ( param.TargetEffectiveDate > payperiod.Start )			// ''target'' also begins within period
    duration = payperiod.End - param.TargetEffectiveDate;
  end if;
  if ( param.EffectiveDate > param.TargetEffectiveDate )
    ineffect = payperiod.End - param.EffectiveDate;
    result = 1.0 * ineffect / duration;
    return result;
  end if;
end if;
return 1.0;',
	1,
	'',
	"a0cdf5c4-7bcc-4c98-8db6-33abe7e6a2d7",
	0);
INSERT INTO O_TPARM
	VALUES ("9a48d4de-43c3-4fbf-9aa1-ea0725959a69",
	"72c37953-d150-4019-9f21-6c3637971a44",
	'TargetEffectiveDate',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"732ede39-9acc-4d33-95e1-53898fc385f0",
	'The date when the target value being modified came into effect.
units: seconds
origin: start of epoch');
INSERT INTO O_TPARM
	VALUES ("732ede39-9acc-4d33-95e1-53898fc385f0",
	"72c37953-d150-4019-9f21-6c3637971a44",
	'EffectiveDate',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'The date when this modifier came into effect.
units: seconds
origin: start of epoch');
INSERT INTO O_NBATTR
	VALUES ("40e511b6-3e21-4c6d-8e9b-eda859847d12",
	"21b3f00e-5083-45c8-92be-24d44a0e0927");
INSERT INTO O_BATTR
	VALUES ("40e511b6-3e21-4c6d-8e9b-eda859847d12",
	"21b3f00e-5083-45c8-92be-24d44a0e0927");
INSERT INTO O_ATTR
	VALUES ("40e511b6-3e21-4c6d-8e9b-eda859847d12",
	"21b3f00e-5083-45c8-92be-24d44a0e0927",
	"00000000-0000-0000-0000-000000000000",
	'Amount',
	'Amount calculated for the pay period from all contribution and deduction elements.',
	'',
	'Amount',
	0,
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"21b3f00e-5083-45c8-92be-24d44a0e0927");
INSERT INTO O_ID
	VALUES (1,
	"21b3f00e-5083-45c8-92be-24d44a0e0927");
INSERT INTO O_ID
	VALUES (2,
	"21b3f00e-5083-45c8-92be-24d44a0e0927");
INSERT INTO PE_PE
	VALUES ("21b3f00e-5083-45c8-92be-24d44a0e0927",
	1,
	"66af3a6e-b969-4d52-8331-503fed93597c",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("66af3a6e-b969-4d52-8331-503fed93597c",
	"00000000-0000-0000-0000-000000000000",
	"5713191d-1d3c-41cb-add1-1cce3729acf2",
	'PayrollMgmt',
	'This is an incomplete rendering of an ERP component representing basic payroll management.
For current demonstration purposes, only some basic functionality is implemented.

An employee''s total compensation may be composed of a number of payment types.
This is represented by a set of ''payment structure'' entities which carry a nominal value.
Some payment types represent multipliers which apply to other types - e.g. bonus as percentage of salary.

When payroll is generated for a pay period, a corresponding set of editable values is created.
These values may be viewed, held, approved; at present, there is no support for editing values.

Note:
There is no support for accepting changes to a department''s staff.
There is no support for modifying the structure of an employee''s compensation.
There are some placeholder actions where interaction with a Finance component would occur.
',
	0,
	'../PayrollMgmt.xtuml');
