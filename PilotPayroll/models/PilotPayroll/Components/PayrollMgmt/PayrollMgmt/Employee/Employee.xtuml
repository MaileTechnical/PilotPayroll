-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("f228e204-e0aa-481c-adb6-27e960fc359c",
	'Employee',
	2,
	'Employee',
	'A paid worker in the organization.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("d17a6d8a-3dab-4ad5-901c-416ede3bfd61",
	"f228e204-e0aa-481c-adb6-27e960fc359c",
	'EvaluatePaymentElements',
	'(Re)evaluate payments by traversing the set of structure elements and applying modifiers as appropriate.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// (Re)evaluate the current payroll elements for this employee.
// For each element, (re)calculate its value - if it has not been edited in a review.
// Navigate to the element specification to understand how to evaluate the element.
// Non-dependent values are calculated first; they may just pro-rate based on nominal value.
// Then, modifier-type elements (multipliers) evaluate based on their specified ''target''.
// 
// Note: There is currently no support for editing values in a review; this is evaluated once.

select many elements related by self->PaymentStructureElement[R27.''has payments specified by'']
                                    ->EmployeePaymentElement[R13.''is current realization of''];

// Pass 1 - evaluate non-dependent elements that have not been edited by a reviewer.
for each element in elements
  select one payroll related by element->Payroll[R31.''has been edited for''];
  if ( empty payroll )
    select one structElement related by element->PaymentStructureElement[R13.''is template for''];
    select one targetSpec related by structElement->PaymentElementSpec[R12.''is typed by'']
                                                ->PaymentElementSpec[R30.''is a modifier for''];
    if ( empty targetSpec )	// this is not a modifier - proceed
      element.Amount = structElement.Evaluate();
 	end if;
  end if;
end for;

// Pass 2 - evaluate any modifier elements: e.g. multiply base pay (''target'') by bonus percentage ("modifier'')
for each element in  elements
  select one payroll related by element->Payroll[R31.''has been edited for''];
  if ( empty payroll )
    select one structElement related by element->PaymentStructureElement[R13.''is template for''];
    select one targetSpec related by structElement->PaymentElementSpec[R12.''is typed by'']
                                                ->PaymentElementSpec[R30.''is a modifier for''];
    if ( not empty targetSpec )	  // this element is a modifier - proceed to identify its ''target''
      select many structElements related by self->PaymentStructureElement[R27.''has payments specified by''];
  	  for each targetElement in structElements
  	    select one targetElementSpec related by targetElement->PaymentElementSpec[R12.''is typed by'']
         where ( selected.Label == targetSpec.Label );
  	    if ( not_empty targetElementSpec )	// this is the target element''s specification
  	      select one payElement related by targetElement->EmployeePaymentElement[R13.''is current realization of''];
          element.Amount = structElement.Modify( TargetValue:payElement.Amount,
                                                 TargetEffectiveDate:targetElement.EffectiveDate );
          break;
 	    end if;
 	  end for;
    end if;
  end if;
end for;
',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0);
INSERT INTO O_TFR
	VALUES ("845726c6-4dbb-4f03-beb2-cd1014000c4a",
	"f228e204-e0aa-481c-adb6-27e960fc359c",
	'CalculateTotalPayment',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Combine evaluated element values for total payment.
select one payment related by self->EmployeePayment[R7];
payment.Amount = 0;
select many payElements related by payment->EmployeePaymentElement[R15.''is composed of''];
for each payElement in payElements
  payment.Amount = payment.Amount + payElement.Amount;  
end for;
',
	1,
	'',
	"d17a6d8a-3dab-4ad5-901c-416ede3bfd61",
	0);
INSERT INTO O_NBATTR
	VALUES ("17433df4-ff12-431a-96cc-61f99155db85",
	"f228e204-e0aa-481c-adb6-27e960fc359c");
INSERT INTO O_BATTR
	VALUES ("17433df4-ff12-431a-96cc-61f99155db85",
	"f228e204-e0aa-481c-adb6-27e960fc359c");
INSERT INTO O_ATTR
	VALUES ("17433df4-ff12-431a-96cc-61f99155db85",
	"f228e204-e0aa-481c-adb6-27e960fc359c",
	"00000000-0000-0000-0000-000000000000",
	'NationalID',
	'',
	'',
	'NationalID',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("9a456bd0-335c-4296-90fe-ce46e22f1d24",
	"f228e204-e0aa-481c-adb6-27e960fc359c");
INSERT INTO O_BATTR
	VALUES ("9a456bd0-335c-4296-90fe-ce46e22f1d24",
	"f228e204-e0aa-481c-adb6-27e960fc359c");
INSERT INTO O_ATTR
	VALUES ("9a456bd0-335c-4296-90fe-ce46e22f1d24",
	"f228e204-e0aa-481c-adb6-27e960fc359c",
	"17433df4-ff12-431a-96cc-61f99155db85",
	'FirstName',
	'',
	'',
	'FirstName',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("d247f608-c226-415f-b26e-54900fc7ce52",
	"f228e204-e0aa-481c-adb6-27e960fc359c");
INSERT INTO O_BATTR
	VALUES ("d247f608-c226-415f-b26e-54900fc7ce52",
	"f228e204-e0aa-481c-adb6-27e960fc359c");
INSERT INTO O_ATTR
	VALUES ("d247f608-c226-415f-b26e-54900fc7ce52",
	"f228e204-e0aa-481c-adb6-27e960fc359c",
	"9a456bd0-335c-4296-90fe-ce46e22f1d24",
	'LastName',
	'',
	'',
	'LastName',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"f228e204-e0aa-481c-adb6-27e960fc359c");
INSERT INTO O_OIDA
	VALUES ("17433df4-ff12-431a-96cc-61f99155db85",
	"f228e204-e0aa-481c-adb6-27e960fc359c",
	0,
	'NationalID');
INSERT INTO O_ID
	VALUES (1,
	"f228e204-e0aa-481c-adb6-27e960fc359c");
INSERT INTO O_ID
	VALUES (2,
	"f228e204-e0aa-481c-adb6-27e960fc359c");
INSERT INTO PE_PE
	VALUES ("f228e204-e0aa-481c-adb6-27e960fc359c",
	1,
	"66af3a6e-b969-4d52-8331-503fed93597c",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("66af3a6e-b969-4d52-8331-503fed93597c",
	"00000000-0000-0000-0000-000000000000",
	"5713191d-1d3c-41cb-add1-1cce3729acf2",
	'PayrollMgmt',
	'',
	0,
	'../PayrollMgmt.xtuml');
