-- BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

INSERT INTO EP_PKG
	VALUES ("42385522-1c5f-4df9-9de6-3cd5ff2b1211",
	"00000000-0000-0000-0000-000000000000",
	"5713191d-1d3c-41cb-add1-1cce3729acf2",
	'DataMarshalling',
	'The marshalling functions are packaged here because they are not subject matter of the Payroll application.
The separation originated out of concern for efficient client-server transmission of multiple-instance data.

At this time, data for each instance is sent or received individually.

A "data sent" signal informs the client that data for all instances has been sent and can be acted on.

Note:
A component providing an efficient solution to combined instance data transmission could be interposed between these
marshalling functions and the communications path. By offering such component(s) in separate projects their use or 
otherwise becomes a matter of deployment configurations and need not affect the defined interfaces used here.

',
	0);
INSERT INTO GD_MD
	VALUES ("72378a00-8e97-4279-8b6f-a2fd67ee8d08",
	112,
	"42385522-1c5f-4df9-9de6-3cd5ff2b1211",
	108,
	0,
	0,
	1,
	1,
	1,
	12,
	1,
	0,
	0,
	0,
	0,
	0,
	'4.1.17',
	'PilotPayroll::Components::PayrollMgmt::DataMarshalling');
INSERT INTO DIM_DIA
	VALUES ("72378a00-8e97-4279-8b6f-a2fd67ee8d08",
	'',
	1.000000,
	0.000000,
	0.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO S_SYNC
	VALUES ("d02f6ae0-5a9d-4e8d-b2ba-0f4897ccd9a4",
	"00000000-0000-0000-0000-000000000000",
	'MarshalPayroll',
	'Send department employee and payment element data on request.',
	'// Send employee identification for each requested employee.
// Then follow with payment details for each employee.

count = 0;
employees = param.Employees;
for each employee in employees
  send USER::PayeeData( Department:param.DeptName, 
                        EmployeeID:employee.NationalID, 
                        EmployeeFirstName:employee.FirstName, 
                        EmployeeLastName:employee.LastName );
  count = count + 1;
end for;
send USER::DataSent( Ident:"employees", Count:count );

count = 0;
for each employee in employees
  select many payments related by employee->EmployeePayment[R7]
                                          ->EmployeePaymentElement[R15.''is composed of''];
  for each payment in payments
    hold = False;
    unapproved = False;
    select one payroll related by payment->Payroll[R29.''is on hold for''];
    if ( not_empty payroll )
      hold = True;
    end if;
    select one payroll related by payment->Payroll[R35.''needs approval for''];
    if ( not_empty payroll )
      unapproved = True;
    end if;  	
    select one spec related by payment->PaymentStructureElement[R13.''is a realization of'']
  	                                  ->PaymentElementSpec[R12.''is typed by''];
    send USER::PayrollData( EmployeeID:employee.NationalID,
                            PaymentLabel:spec.Label, 
                            PaymentAmount:payment.Amount, 
                            HoldStatus:hold, 
                            UnapprovalStatus: unapproved  );
    count = count + 1;
  end for;
end for;
send USER::DataSent( Ident:"payroll", Count:count );',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0,
	0);
INSERT INTO S_SPARM
	VALUES ("01898846-dc9a-4a4c-b295-fb92bf20c24c",
	"d02f6ae0-5a9d-4e8d-b2ba-0f4897ccd9a4",
	'DeptName',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_SPARM
	VALUES ("bc5c13e4-7ef7-47c2-a3f0-ec73fc370f24",
	"d02f6ae0-5a9d-4e8d-b2ba-0f4897ccd9a4",
	'HoldsOnly',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"279e1dbc-8789-45f2-af5a-3798e395d26d",
	'');
INSERT INTO S_SPARM
	VALUES ("279e1dbc-8789-45f2-af5a-3798e395d26d",
	"d02f6ae0-5a9d-4e8d-b2ba-0f4897ccd9a4",
	'Employees',
	"4e279fab-fc34-49a9-a51a-cafff6c10b7f",
	0,
	'',
	"01898846-dc9a-4a4c-b295-fb92bf20c24c",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("4e279fab-fc34-49a9-a51a-cafff6c10b7f",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref_set<Employee>',
	'',
	'',
	'../PayrollMgmt/PayrollMgmt.xtuml');
INSERT INTO PE_PE
	VALUES ("d02f6ae0-5a9d-4e8d-b2ba-0f4897ccd9a4",
	1,
	"42385522-1c5f-4df9-9de6-3cd5ff2b1211",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("b71aad5b-341a-499a-8d47-a5b5f86a6927",
	"00000000-0000-0000-0000-000000000000",
	'AvailablePayrolls',
	'Respond with any departments with a payroll available for review.',
	'select many depts from instances of Department;
count = 0;
for each dept in depts
  select one payroll related by dept->Payroll[R34.''has under review''];
  if ( not_empty payroll )
  	send USER::PayrollAvailable( Department:dept.Name );
  	count = count + 1;
  end if;
end for;
send USER::DataSent( Ident:"available", Count:count );',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0,
	0);
INSERT INTO PE_PE
	VALUES ("b71aad5b-341a-499a-8d47-a5b5f86a6927",
	1,
	"42385522-1c5f-4df9-9de6-3cd5ff2b1211",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO PE_PE
	VALUES ("42385522-1c5f-4df9-9de6-3cd5ff2b1211",
	1,
	"00000000-0000-0000-0000-000000000000",
	"7c6d191c-1502-4f72-9055-2069e5f671e6",
	7);
INSERT INTO C_C_PROXY
	VALUES ("7c6d191c-1502-4f72-9055-2069e5f671e6",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	'PayrollMgmt',
	'',
	0,
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'',
	'../PayrollMgmt.xtuml');
INSERT INTO S_SYS_PROXY
	VALUES ("5713191d-1d3c-41cb-add1-1cce3729acf2",
	'PilotPayroll',
	1,
	'../../../PilotPayroll.xtuml');
