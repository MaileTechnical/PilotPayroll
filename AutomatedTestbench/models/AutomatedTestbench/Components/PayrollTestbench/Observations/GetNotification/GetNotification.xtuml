-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("a86aeb29-ce3a-4561-a17d-0de23b51960a",
	'GetNotification',
	20,
	'GetNotification',
	'This observation succeeds when it finds a notification from the application that matches its identification attribute.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("c956e558-4bc7-47ac-8549-1aa5cb07a7b8",
	"a86aeb29-ce3a-4561-a17d-0de23b51960a",
	'CheckNotification',
	'When invoked, search any existing notifications looking for a match.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'select one obs related by self->Observation[R400];
select any msg from instances of ReceivedNotification
 where ( selected.Ident == self.Ident );
if ( not_empty msg )
  delete object instance msg;
  obs.Complete( success:True );
else
  LOG::LogFailure( message:" --- Failed to observe notification for " + self.Ident );
  obs.Complete( success:False );
end if;
',
	1,
	'',
	"37784ddd-5a89-4c1d-9f28-f1688862acf0",
	0,
	0);
INSERT INTO O_TFR
	VALUES ("37784ddd-5a89-4c1d-9f28-f1688862acf0",
	"a86aeb29-ce3a-4561-a17d-0de23b51960a",
	'Create',
	'Add an observation of this type to the ''script'' of a test case.
See Observation.AppendTriggered for description.',
	"ba5eda7a-def5-0000-0000-000000000000",
	0,
	'create object instance verify of GetNotification;

create object instance obs of Observation;
relate verify to obs across R400;
verify.Ident = param.matchIdent;

obs.AppendTriggered( seqLabel:param.seqLabel, 
                   key:"Notification_" + verify.Ident,
                   timeLimit:0,
                   concurrent:True );',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0,
	0);
INSERT INTO O_TPARM
	VALUES ("83909e5d-0518-4a08-894b-357c2bd2f054",
	"37784ddd-5a89-4c1d-9f28-f1688862acf0",
	'seqLabel',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("a4dfebf1-a8d7-43a2-a97a-35ac80533a79",
	"37784ddd-5a89-4c1d-9f28-f1688862acf0",
	'matchIdent',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"83909e5d-0518-4a08-894b-357c2bd2f054",
	'This value should match the Ident field of a received notification for observation success.');
INSERT INTO O_NBATTR
	VALUES ("2b0f8d2e-c904-4d56-a912-6a49c20578c2",
	"a86aeb29-ce3a-4561-a17d-0de23b51960a");
INSERT INTO O_BATTR
	VALUES ("2b0f8d2e-c904-4d56-a912-6a49c20578c2",
	"a86aeb29-ce3a-4561-a17d-0de23b51960a");
INSERT INTO O_ATTR
	VALUES ("2b0f8d2e-c904-4d56-a912-6a49c20578c2",
	"a86aeb29-ce3a-4561-a17d-0de23b51960a",
	"00000000-0000-0000-0000-000000000000",
	'Ident',
	'',
	'',
	'Ident',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"a86aeb29-ce3a-4561-a17d-0de23b51960a");
INSERT INTO O_ID
	VALUES (1,
	"a86aeb29-ce3a-4561-a17d-0de23b51960a");
INSERT INTO O_ID
	VALUES (2,
	"a86aeb29-ce3a-4561-a17d-0de23b51960a");
INSERT INTO PE_PE
	VALUES ("a86aeb29-ce3a-4561-a17d-0de23b51960a",
	1,
	"39f2bab9-b4aa-4698-a3af-d38383cf2713",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("39f2bab9-b4aa-4698-a3af-d38383cf2713",
	"00000000-0000-0000-0000-000000000000",
	"254e12da-372d-4f11-ad9a-5b53303407a5",
	'Observations',
	'An application-specific testbench which will run a series of test cases and report success or failure.
Controlled by an application-independent utility the testbench injects stimuli and observes results.

Test cases are grouped into one or more test buckets which are added to a singleton test suite.
Testing is initiated by a function which registers a test suite with the utility and adds test buckets.
Each test bucket surfaces an operation which ''scripts'' its test cases.
A test cases creates one or more sequences of stimuli which are added by the script.
Each stimulus can be followed by zero or more observations which assess application output.

A summary report presents test case pass/fail information.

To run the nominal cases in Verifier:

    Create a debug configuration of type "xtUML eXecute Application" and name it Payroll_test
    Disable "Log model execution activity"
    Disable "Run deterministically"
    Disable "Enable simulated time"
    Select the SimulationConfiguration within the AutomatedTesting project
    Run Verifier using this debug configuration
    Execute InitializeAndRun function in TestFunctions in AutomatedTesting
',
	0,
	'../Observations.xtuml');
