-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("ebb842bc-1283-4528-8f93-563362996b3f",
	'NominalCaseBucket',
	15,
	'NominalCaseBucket',
	'A test bucket which runs a number of tests based on Use Cases for the Payroll application.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("335acef2-7a9f-427b-b2da-3f2c30504939",
	"ebb842bc-1283-4528-8f93-563362996b3f",
	'CreateBucketTests',
	'Configure the test cases in this test bucket: ''script'' sequences of stimuli and onbservations.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'::CreateNotificationString( key:"imminent", msg:"Draft payroll generation imminent for " );
::CreateNotificationString( key:"generating", msg:"Draft payroll generating for " );
::CreateNotificationString( key:"generated", msg:"Draft payroll generated for " );
::CreateNotificationString( key:"reviewed", msg:"Payroll reviewed for " );
::CreateNotificationString( key:"unapproved", msg:"Payroll unapproved for " ); 
::CreateNotificationString( key:"approved", msg:"Payroll approved for " );
::CreateNotificationString( key:"submitted", msg:"Payroll submitted for " );
::CreateNotificationString( key:"overdue", msg:"Payroll submission overdue for " );

select one bucket related by self->TestBucket[R7];
send TESTSEQ::SetTestBucketTimeResolutions( bucketId:bucket.bucketId, timeResolution:timeResolution::second, pollResolution:timeResolution::second );

// Use Case UC06 
send TESTSEQ::AddTestCase( caseLabel:"UC06" ); 
send TESTSEQ::AddStimulusSequence( seqLabel:"seq06" );
FastForward::Create( seqLabel:"seq06", days:13, hours:11 );
GetNotification::Create( seqLabel:"seq06", matchIdent:"imminent" );

// Use Case UC05
send TESTSEQ::AddTestCase( caseLabel:"UC05" );
send TESTSEQ::AddStimulusSequence( seqLabel:"seq05" );
FastForward::Create( seqLabel:"seq05", days:1, hours:1 );
GetNotification::Create( seqLabel:"seq05", matchIdent:"generating" );
GetNotification::Create( seqLabel:"seq05", matchIdent:"generated" );

// Use Case UC03
send TESTSEQ::AddTestCase( caseLabel:"UC03" );
send TESTSEQ::AddStimulusSequence( seqLabel:"seq03" );
RequestAvailable::Create( seqLabel:"seq03" );
WaitForTrigger::Create( seqLabel:"seq03", key:"DepartmentsSent", concurrent:False );
RequestPayroll::Create( seqLabel:"seq03", dept:"IT", holds:False );
WaitForTrigger::Create( seqLabel:"seq03", key:"PayrollAvailable", concurrent:True );
ReviewPayrollElement::Create( seqLabel:"seq03", employee:10001, label:"Monthly salary", action:"hold", pollInterval:1, timeLimit:5, concurrent:False );
PayrollStatusUpdate::Create( seqLabel:"seq03", dept:"IT", requestedstatus:"Save" );
GetNotification::Create( seqLabel:"seq03", matchIdent:"reviewed" );
ReviewPayrollElement::Create( seqLabel:"seq03", employee:10001, label:"Monthly salary", action:"checkhold", pollInterval:1, timeLimit:5, concurrent:False );
PayrollStatusUpdate::Create( seqLabel:"seq03", dept:"IT", requestedstatus:"clear" );


// Use Case UC07
send TESTSEQ::AddTestCase( caseLabel:"UC07" );
send TESTSEQ::AddStimulusSequence( seqLabel:"seq07" );
RequestPayroll::Create( seqLabel:"seq07", dept:"IT", holds:True );
WaitForTrigger::Create( seqLabel:"seq07", key:"PayrollAvailable", concurrent:True );
ReviewPayrollElement::Create( seqLabel:"seq07", employee:10001, label:"Monthly salary", action:"clear", pollInterval:1, timeLimit:5, concurrent:False );
ReviewPayrollElement::Create( seqLabel:"seq07", employee:10002, label:"Monthly salary", action:"hold", pollInterval:1, timeLimit:5, concurrent:False);
PayrollStatusUpdate::Create( seqLabel:"seq07", dept:"IT", requestedstatus:"Save" );
GetNotification::Create( seqLabel:"seq07", matchIdent:"reviewed" );
ReviewPayrollElement::Create( seqLabel:"seq07", employee:10001, label:"Monthly salary", action:"checkclear", pollInterval:1, timeLimit:5, concurrent:False );
PayrollStatusUpdate::Create( seqLabel:"seq07", dept:"IT", requestedstatus:"Clear" );

// Use Case UC04
send TESTSEQ::AddTestCase( caseLabel:"UC04" );
send TESTSEQ::AddStimulusSequence( seqLabel:"seq04" );
RequestPayroll::Create( seqLabel:"seq04", dept:"IT", holds:False );
WaitForTrigger::Create( seqLabel:"seq04", key:"PayrollAvailable", concurrent:False );
PayrollStatusUpdate::Create( seqLabel:"seq04", dept:"IT", requestedstatus:"Approve" );
GetNotification::Create( seqLabel:"seq04", matchIdent:"unapproved" );
ReviewPayrollElement::Create( seqLabel:"seq04", employee:10002, label:"Monthly salary", action:"checkunapproval", pollInterval:1, timeLimit:5, concurrent:False );
ReviewPayrollElement::Create( seqLabel:"seq04", employee:10002, label:"Monthly salary", action:"approve", pollInterval:1, timeLimit:5, concurrent:False );
PayrollStatusUpdate::Create( seqLabel:"seq04", dept:"IT", requestedstatus:"Approve" );
GetNotification::Create( seqLabel:"seq04", matchIdent:"approved" );
PayrollStatusUpdate::Create( seqLabel:"seq04", dept:"IT", requestedstatus:"Clear" );

// Use Case UC09
send TESTSEQ::AddTestCase( caseLabel:"UC09" );
send TESTSEQ::AddStimulusSequence( seqLabel:"seq09" );
RequestPayroll::Create( seqLabel:"seq09", dept:"IT", holds:False );
WaitForTrigger::Create( seqLabel:"seq09", key:"PayrollAvailable", concurrent:False );
PayrollStatusUpdate::Create( seqLabel:"seq09", dept:"IT", requestedstatus:"FinalSubmit" );
GetNotification::Create( seqLabel:"seq09", matchIdent:"submitted" );


bucket.Initialized();
',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0);
INSERT INTO O_TFR
	VALUES ("8f771b4c-2ec6-4a14-b353-83e057434b3e",
	"ebb842bc-1283-4528-8f93-563362996b3f",
	'AddBucket',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'create object instance bucket of TestBucket;
relate self to bucket across R7;
bucket.name = "Payroll nominal test cases";
bucket.AddToSuite();',
	1,
	'',
	"335acef2-7a9f-427b-b2da-3f2c30504939",
	0);
INSERT INTO O_ID
	VALUES (0,
	"ebb842bc-1283-4528-8f93-563362996b3f");
INSERT INTO O_ID
	VALUES (1,
	"ebb842bc-1283-4528-8f93-563362996b3f");
INSERT INTO O_ID
	VALUES (2,
	"ebb842bc-1283-4528-8f93-563362996b3f");
INSERT INTO PE_PE
	VALUES ("ebb842bc-1283-4528-8f93-563362996b3f",
	1,
	"2af95cb4-1348-4abf-a7fa-72c9872d63cb",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("2af95cb4-1348-4abf-a7fa-72c9872d63cb",
	"00000000-0000-0000-0000-000000000000",
	"254e12da-372d-4f11-ad9a-5b53303407a5",
	'Testbench',
	'An application-specific testbench which will run a series of test cases and report success or failure.
Controlled by an application-independent utility the testbench injects stimuli and observes results.

Test cases are grouped into one or more test buckets which are added to a singleton test suite.
Testing is initiated by a function which registers a test suite with the utility and adds test buckets.
Each test bucket surfaces an operation which ''scripts'' its test cases.
A test cases creates one or more sequences of stimuli which are added by the script.
Each stimulus can be followed by zero or more observations which assess application output.

A summary report presents test case pass/fail information.

To run the nominal cases in Verifier:

    Create a debug configuration of type "xtUML eXecute Application" and name it Payroll_test
    Disable "Log model execution activity"
    Disable "Run deterministically"
    Disable "Enable simulated time"
    Select the SimulationConfiguration within the AutomatedTesting project
    Run Verifier using this debug configuration
    Execute InitializeAndRun function in TestFunctions in AutomatedTesting
',
	0,
	'../Testbench.xtuml');
